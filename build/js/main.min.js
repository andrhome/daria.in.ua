"use strict";$(document).ready(function(){!function(){AOS.init({easing:"ease"})}(),function(){function t(t){var o=$("#header");if(0!==t.length){var n=t.offset().top;$(window).scrollTop()>=n?o.addClass("fixed"):o.removeClass("fixed")}}$(window).scroll(function(){t($("#mainTitle")),t($(".fixed-header-flag"))})}(),function(){function t(t){t<10?e.text("0"+t):e.text(t)}function o(){var t=$(a[0]).data("name"),o=$(a[0]).data("number");e.text("0"+o),i.text(t)}function n(e){if($(a[e]).offset()){var c=$(a[e]).offset().top-250;if($(window).scrollTop()>c){var s=$(a[e]).data("name");t($(a[e]).data("number")),i.text(s),n(e+1)}}$(window).scrollTop()<f&&o()}$(window).on("scroll",function(){n(1)});var e=$("#currentSection"),i=$("#sectionName"),c=$("#sectionCount"),a=$(".site-section"),s=a.length,f=$(a[0]).height();!function(){$(window).scrollTop()>0&&$(window).scrollTop()>f?$.each(a,function(t,o){var n=$(o).offset().top;if(t+1<a.length){var c=$(a[t+1]).offset().top;if(n<=$(window).scrollTop()&&c>$(window).scrollTop()){var s=$(o).data("name"),f=$(o).data("number");e.text("0"+f),i.text(s)}}}):o(),s<10?c.text("0"+a.length):c.text(a.length)}()}(),function(){$(".go-to-top").each(function(){$(this).click(function(){return $("html, body").animate({scrollTop:0},"slow"),!1})})}(),function(){function t(){var t=$(this);setTimeout(function(){t.find(".project__bg").fadeIn(500).stop(!0,!0)},100),$(this).find(".project__canvas").css({boxShadow:"none",background:"none"})}function o(){function t(t,n){o.find(".project__canvas").css({boxShadow:"0 0 13px 1px "+t,backgroundColor:n})}var o=$(this);setTimeout(function(){o.find(".project__bg").fadeOut(800).stop(!0,!0)},300),setTimeout(function(){o.hasClass("project-zernobot")&&t("#08171c","#194957"),o.hasClass("project-logbook")&&t("#f2f2f2","#f2f2f2"),o.hasClass("project-street-quests")&&t("#060606","#2c2c2c")},300)}var n=$(".project");$(".project-page").length>0||n.hover(t,o)}()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
